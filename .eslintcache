[{"/home/zoltanlakatos/workspace/todo-client/src/index.tsx":"1","/home/zoltanlakatos/workspace/todo-client/src/App.tsx":"2","/home/zoltanlakatos/workspace/todo-client/src/components/TodoList.tsx":"3","/home/zoltanlakatos/workspace/todo-client/src/components/TodoItem.tsx":"4","/home/zoltanlakatos/workspace/todo-client/src/utils/formatters.ts":"5","/home/zoltanlakatos/workspace/todo-client/src/components/CreateTodo.tsx":"6","/home/zoltanlakatos/workspace/todo-client/src/hooks/graphql/useGraphQL.ts":"7","/home/zoltanlakatos/workspace/todo-client/src/redux/stores/index.ts":"8","/home/zoltanlakatos/workspace/todo-client/src/redux/reducers/index.ts":"9","/home/zoltanlakatos/workspace/todo-client/src/redux/reducers/todoReducer.ts":"10","/home/zoltanlakatos/workspace/todo-client/src/redux/reducers/appReducer.ts":"11","/home/zoltanlakatos/workspace/todo-client/src/redux/constants/index.ts":"12","/home/zoltanlakatos/workspace/todo-client/src/redux/constants/todoConstants.ts":"13","/home/zoltanlakatos/workspace/todo-client/src/redux/constants/apiConstants.ts":"14","/home/zoltanlakatos/workspace/todo-client/src/hooks/redux/useActions.ts":"15","/home/zoltanlakatos/workspace/todo-client/src/redux/actions/index.ts":"16","/home/zoltanlakatos/workspace/todo-client/src/redux/actions/apiActions.ts":"17","/home/zoltanlakatos/workspace/todo-client/src/redux/actions/todoActions.ts":"18","/home/zoltanlakatos/workspace/todo-client/src/hooks/graphql/useApi.ts":"19","/home/zoltanlakatos/workspace/todo-client/src/api/queries/index.ts":"20","/home/zoltanlakatos/workspace/todo-client/src/api/queries/getTodo.ts":"21","/home/zoltanlakatos/workspace/todo-client/src/api/queries/listTodo.ts":"22","/home/zoltanlakatos/workspace/todo-client/src/redux/selectors/appSelectors.ts":"23","/home/zoltanlakatos/workspace/todo-client/src/components/index.ts":"24","/home/zoltanlakatos/workspace/todo-client/src/components/Header.tsx":"25","/home/zoltanlakatos/workspace/todo-client/src/redux/selectors/todoSelectors.ts":"26"},{"size":360,"mtime":1607600521231,"results":"27","hashOfConfig":"28"},{"size":906,"mtime":1607618647266,"results":"29","hashOfConfig":"28"},{"size":997,"mtime":1607618616952,"results":"30","hashOfConfig":"28"},{"size":5026,"mtime":1607506202981,"results":"31","hashOfConfig":"28"},{"size":164,"mtime":1607004909865,"results":"32","hashOfConfig":"28"},{"size":1256,"mtime":1607434689079,"results":"33","hashOfConfig":"28"},{"size":626,"mtime":1607607178518,"results":"34","hashOfConfig":"28"},{"size":179,"mtime":1607601660592,"results":"35","hashOfConfig":"28"},{"size":231,"mtime":1607600196116,"results":"36","hashOfConfig":"28"},{"size":379,"mtime":1607601796123,"results":"37","hashOfConfig":"28"},{"size":472,"mtime":1607611887626,"results":"38","hashOfConfig":"28"},{"size":62,"mtime":1607598364055,"results":"39","hashOfConfig":"28"},{"size":918,"mtime":1607597184429,"results":"40","hashOfConfig":"28"},{"size":102,"mtime":1607597232241,"results":"41","hashOfConfig":"28"},{"size":656,"mtime":1607601980800,"results":"42","hashOfConfig":"28"},{"size":58,"mtime":1607600688007,"results":"43","hashOfConfig":"28"},{"size":211,"mtime":1607601421018,"results":"44","hashOfConfig":"28"},{"size":640,"mtime":1607601407769,"results":"45","hashOfConfig":"28"},{"size":438,"mtime":1607618519857,"results":"46","hashOfConfig":"28"},{"size":52,"mtime":1607608783547,"results":"47","hashOfConfig":"28"},{"size":200,"mtime":1607608519420,"results":"48","hashOfConfig":"28"},{"size":316,"mtime":1607609007166,"results":"49","hashOfConfig":"28"},{"size":259,"mtime":1607618173856,"results":"50","hashOfConfig":"28"},{"size":51,"mtime":1607615285004,"results":"51","hashOfConfig":"28"},{"size":377,"mtime":1607614673421,"results":"52","hashOfConfig":"28"},{"size":346,"mtime":1607617947117,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1f2jugv",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/home/zoltanlakatos/workspace/todo-client/src/index.tsx",[],["110","111"],"/home/zoltanlakatos/workspace/todo-client/src/App.tsx",[],"/home/zoltanlakatos/workspace/todo-client/src/components/TodoList.tsx",[],"/home/zoltanlakatos/workspace/todo-client/src/components/TodoItem.tsx",["112","113","114"],"import React from \"react\"\nimport { formatDate } from '../utils/formatters'\nimport { Checkbox, Paper, Grid, Button } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { REMOVE_TODO } from '../hooks/mutations/useRemoveTodo'\nimport { gql, Reference, StoreObject, useMutation } from \"@apollo/client\";\nimport { GET_TODOS } from \"../hooks/queries\";\n\ninterface CheckboxProps {\n    checked: boolean\n    onChange(ev: any): void\n}\n\nconst GreenCheckbox = withStyles({\n    root: {\n        color: green[400],\n        '&$checked': {\n            color: green[600],\n        },\n    },\n    checked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n\nexport interface TodoItemProps {\n    id: number\n    createdAt: string\n    updatedAt: string\n    description: string\n    completed: boolean\n    onCompletedChange(ev: any): void\n}\n\nexport const TodoItem =\n    ({ id, createdAt, updatedAt, description, completed, onCompletedChange }: TodoItemProps) => {\n\n        const [deleteMutation, { loading }] = useMutation(REMOVE_TODO)\n\n        const handleDelete = () => {\n            deleteMutation({\n                variables: { id },\n                update: (cache) => {\n                    console.log('update')\n                    /*\n                    cache.modify({\n                        id: cache.identify({ id }),\n                        fields: {\n                            todos(existingTodos = [], { readField }) {\n                                console.log('itt')\n                                existingTodos.forEach(((todoRef: any) => {\n                                    console.log(readField('id',todoRef))\n                                }))\n                                return existingTodos.filter((todoRef: StoreObject | Reference | undefined) => `Todo:${id}` !== readField('id', todoRef))\n                            }\n                        }\n                    })\n                    */\n\n                    const todos: any = cache.readQuery({ query: GET_TODOS, variables: { filters: {} } })\n\n                    const data = JSON.parse(JSON.stringify(todos))\n\n                    data.todos.items = data.todos.items.filter((t: { id: number; }) => {\n                        return t.id !== id;\n                    })\n\n                    cache.writeQuery({ query: GET_TODOS, data })\n\n                    //console.log('after items:', data)\n\n                    /*\n                    const todo = cache.readFragment({\n                        id: `Todo:${id}`,\n                        fragment: gql`\n                            fragment MyTodo on Todo {\n                            id\n                            completed\n                            }\n                        `,\n                    });\n                    */\n\n                    //console.log(todo)\n                    /*\n                    const todos = cache.readQuery({ query: GET_TODOS, variables: { filters: {} } })\n         \n                    console.log(todos);\n                    */\n                    /*\n                    cache.modify({\n                        id: cache.identify({ id }),\n                        fields: {\n                            todos(existingTodos = [], { readField }) {\n                                return existingTodos.filter((todoRef: StoreObject | Reference | undefined) => id !== readField('id', todoRef))\n                            }\n                        }\n                    })\n                    */\n\n                }\n            })\n        }\n\n        return (\n            <>\n                <li key={id} className=\"todo-item\">\n                    <Paper>\n                        <Grid alignItems=\"center\" container spacing={2}>\n                            <Grid item xs={1}>\n                                <GreenCheckbox onChange={onCompletedChange} checked={completed} />\n                            </Grid>\n                            <Grid item xs={9}>\n                                <p className=\"description\">{description}</p>\n                            </Grid>\n                            <Grid item xs={1}>\n                                <Button\n                                    disabled={loading}\n                                    onClick={handleDelete}\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    size=\"small\"\n                                    startIcon={<DeleteIcon />}\n                                >\n                                    Delete\n                            </Button>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                    <Grid className=\"date-container\">\n                        created: {formatDate(createdAt)} | updated: {formatDate(updatedAt)}\n                    </Grid>\n                </li>\n            </>\n        )\n    }",["115","116"],"/home/zoltanlakatos/workspace/todo-client/src/utils/formatters.ts",[],"/home/zoltanlakatos/workspace/todo-client/src/components/CreateTodo.tsx",["117","118"],"import { gql, useMutation } from '@apollo/client'\nimport { TextField, FormControl } from '@material-ui/core'\nimport { GET_TODOS } from '../hooks/queries/useGetTodos'\n\nconst CreateTodo: React.FC = () => {\n    const CREATE_TODO = gql`\n        mutation createTodo($input:TodoInput!){\n            createTodo(input:$input){\n                id,\n                createdAt,\n                updatedAt,\n                description,\n                completed\n            }\n        }\n    `\n\n    const [createTodo, { loading, error }] = useMutation(CREATE_TODO)\n\n    const handleCreate = (ev: any) => {\n        ev.preventDefault()\n        console.log(ev.target.elements.todo.value)\n        createTodo({\n            variables: { input: { description: ev.target.elements.todo.value } },\n            refetchQueries: [{\n                query: GET_TODOS,\n                variables: {\n                    filters: {}\n                }\n            }]\n        }).then(() => ev.target.elements.todo.value = '')\n    }\n\n    return (\n        <form className=\"fluid\" onSubmit={handleCreate}>\n            <FormControl fullWidth>\n                <TextField id=\"todo\" label=\"Create Todo\" variant=\"filled\" />\n            </FormControl>\n        </form>\n    )\n}\n\nexport default CreateTodo","/home/zoltanlakatos/workspace/todo-client/src/hooks/graphql/useGraphQL.ts",[],"/home/zoltanlakatos/workspace/todo-client/src/redux/stores/index.ts",[],"/home/zoltanlakatos/workspace/todo-client/src/redux/reducers/index.ts",[],"/home/zoltanlakatos/workspace/todo-client/src/redux/reducers/todoReducer.ts",[],"/home/zoltanlakatos/workspace/todo-client/src/redux/reducers/appReducer.ts",[],"/home/zoltanlakatos/workspace/todo-client/src/redux/constants/index.ts",[],"/home/zoltanlakatos/workspace/todo-client/src/redux/constants/todoConstants.ts",[],"/home/zoltanlakatos/workspace/todo-client/src/redux/constants/apiConstants.ts",[],"/home/zoltanlakatos/workspace/todo-client/src/hooks/redux/useActions.ts",[],"/home/zoltanlakatos/workspace/todo-client/src/redux/actions/index.ts",[],"/home/zoltanlakatos/workspace/todo-client/src/redux/actions/apiActions.ts",[],"/home/zoltanlakatos/workspace/todo-client/src/redux/actions/todoActions.ts",[],"/home/zoltanlakatos/workspace/todo-client/src/hooks/graphql/useApi.ts",[],"/home/zoltanlakatos/workspace/todo-client/src/api/queries/index.ts",[],"/home/zoltanlakatos/workspace/todo-client/src/api/queries/getTodo.ts",[],"/home/zoltanlakatos/workspace/todo-client/src/api/queries/listTodo.ts",[],"/home/zoltanlakatos/workspace/todo-client/src/redux/selectors/appSelectors.ts",[],"/home/zoltanlakatos/workspace/todo-client/src/components/index.ts",[],"/home/zoltanlakatos/workspace/todo-client/src/components/Header.tsx",[],"/home/zoltanlakatos/workspace/todo-client/src/redux/selectors/todoSelectors.ts",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":8,"column":10,"nodeType":"125","messageId":"126","endLine":8,"endColumn":13},{"ruleId":"123","severity":1,"message":"127","line":8,"column":15,"nodeType":"125","messageId":"126","endLine":8,"endColumn":24},{"ruleId":"123","severity":1,"message":"128","line":8,"column":26,"nodeType":"125","messageId":"126","endLine":8,"endColumn":37},{"ruleId":"119","replacedBy":"129"},{"ruleId":"121","replacedBy":"130"},{"ruleId":"123","severity":1,"message":"131","line":18,"column":26,"nodeType":"125","messageId":"126","endLine":18,"endColumn":33},{"ruleId":"123","severity":1,"message":"132","line":18,"column":35,"nodeType":"125","messageId":"126","endLine":18,"endColumn":40},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"@typescript-eslint/no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","'Reference' is defined but never used.","'StoreObject' is defined but never used.",["133"],["134"],"'loading' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]